/*******************************************************************
* Файл: crypt_gost_28147-89_API.h								   *
* Описание:содержит обяъявление функций							   *
* криптографического алгоритма ГОСТ 28147-89					   *
* Автор: Иванов Роман Витальевич (c)							   *
* Год: 2014 - 2015												   *
*																   *
********************************************************************/

#ifndef CRYPT_GOST_28147_89_API_H_
#define CRYPT_GOST_28147_89_API_H_

#define CRYPT_GOST_28147_89_API_VERSION 0x01

#include "crypt_gost_types.h"

#if __GNUC__ >= 4
#define DLL_PUBLIC __attribute__ ((visibility("default")))
#define DLL_LOCAL  __attribute__ ((visibility("hidden")))
#else
#define DLL_PUBLIC
#define DLL_LOCAL
#endif

//#define CRYPT_GOST_API extern "C"

/*******************************************************************
* crypt_gost_28147-89 version (версия dll)						   *
********************************************************************/

/*******************************************************************
* блок подстановки K состоит из 8 узлов замены k1, k2, k3, k4, k5, *
* k6, k7, k8 по 64 бит каждый 									   *
********************************************************************/

static byte const k8[key_size16] = {14,  4, 13,  1,  2, 15, 11,  8,  3, 10,  6, 12,  5,  9,  0,  7 };
static byte const k7[key_size16] = {15,  1,  8, 14,  6, 11,  3,  4,  9,  7,  2, 13, 12,  0,  5, 10 };
static byte const k6[key_size16] = {10,  0,  9, 14,  6,  3, 15,  5,  1, 13, 12,  7, 11,  4,  2,  8 };
static byte const k5[key_size16] = { 7, 13, 14,  3,  0,  6,  9, 10,  1,  2,  8,  5, 11, 12,  4, 15 };
static byte const k4[key_size16] = { 2, 12,  4,  1,  7, 10, 11,  6,  8,  5,  3, 15, 13,  0, 14,  9 };
static byte const k3[key_size16] = {12,  1, 10, 15,  9,  2,  6,  8,  0, 13,  3,  4, 14,  7,  5, 11 };
static byte const k2[key_size16] = { 4, 11,  2, 14, 15,  0,  8, 13,  3, 12,  9,  7,  5, 10,  6,  1 };
static byte const k1[key_size16] = {13,  2,  8,  4,  6, 15, 11,  1, 10,  9,  3, 14,  5,  0, 12,  7 };


static byte k87[key_size256];
static byte k65[key_size256];
static byte k43[key_size256];
static byte k21[key_size256];

/*******************************************************************
* API functions (интерфейсные функции)							   *
********************************************************************/

/*******************************************************************
* Функция key_box_init() инициализирует ключ шифрования			   *
********************************************************************/
DLL_PUBLIC void key_box_init();
/*******************************************************************
* Функция gostcrypt() шифрует 64 бита информации                   *
*			в режиме простой замены								   *
*  Параметры функции:											   *
*  1. {word32 const *in_data} массив из 2 элементов по 32 бит,	   *
*  входные данные для шифрования								   *
*																   *
*  2. {word32 *out_data} массив из 2 элементов по 32 бит           *
*  для зашифрованных данных										   *
*																   *
*  3. {word32 const *gost_key} - массив из 8 элементов типа word32 *
*	  (ключ шифорвания)											   *
*																   *
********************************************************************/
DLL_PUBLIC void  gostcrypt( word32 const *in_data, word32 *out_data, word32 const *gost_key);
/*******************************************************************
* Функция gostdecrypt() расшифрует 64 бита информации              *
*			в режиме простой замены								   *
*  Параметры функции:											   *
*  1. {word32 const *in_data} массив из 2 элементов по 32 бит,	   *
*  входные данные для расшифрования								   *
*																   *
*  2. {word32 *out_data} массив из 2 элементов по 32 бит           *
*  для расшифрованных данных									   *
*																   *
*  3. {word32 const *gost_key} - массив из 8 элементов типа word32 *
*	  (ключ расшифрования)										   *
*																   *
********************************************************************/
DLL_PUBLIC void gostdecrypt(word32 const *in_data, word32 *out_data, word32 const *gost_key);

/*******************************************************************
* private functions (вспомогательные функйии)					   *
********************************************************************/

static word32 f(word32 x);

#endif